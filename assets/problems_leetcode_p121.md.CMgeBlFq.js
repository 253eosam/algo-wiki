import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.ClVAdkRN.js";const o=JSON.parse('{"title":"LeetCode 121 - Best Time to Buy and Sell Stock","description":"","frontmatter":{},"headers":[],"relativePath":"problems/leetcode/p121.md","filePath":"problems/leetcode/p121.md"}'),l={name:"problems/leetcode/p121.md"};function h(e,s,k,p,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="leetcode-121-best-time-to-buy-and-sell-stock" tabindex="-1">LeetCode 121 - Best Time to Buy and Sell Stock <a class="header-anchor" href="#leetcode-121-best-time-to-buy-and-sell-stock" aria-label="Permalink to &quot;LeetCode 121 - Best Time to Buy and Sell Stock&quot;">​</a></h1><h2 id="문제-설명" tabindex="-1">문제 설명 <a class="header-anchor" href="#문제-설명" aria-label="Permalink to &quot;문제 설명&quot;">​</a></h2><p>주어진 <code>prices</code> 배열에서, i번째 날에 주식을 사고 j번째 날에 판다고 할 때 (<strong>i &lt; j</strong>), 얻을 수 있는 최대 이익을 구하는 문제입니다. 주식은 <strong>한 번만 사고 한 번만 파는 것</strong>만 가능합니다.</p><h2 id="접근-방법-greedy-그리디-방식" tabindex="-1">접근 방법 - Greedy (그리디) 방식 <a class="header-anchor" href="#접근-방법-greedy-그리디-방식" aria-label="Permalink to &quot;접근 방법 - Greedy (그리디) 방식&quot;">​</a></h2><p>이 문제를 가장 효율적으로 해결하는 방법은 <strong>앞에서부터 최소 가격을 저장하면서 현재 가격과의 차이로 최대 이익을 계산하는 것</strong>입니다.</p><h3 id="핵심-아이디어" tabindex="-1">핵심 아이디어 <a class="header-anchor" href="#핵심-아이디어" aria-label="Permalink to &quot;핵심 아이디어&quot;">​</a></h3><ul><li>한 번 순회하면서 <strong>최소 가격(minPrice)</strong> 을 지속적으로 업데이트합니다.</li><li>현재 가격에서 최소 가격을 뺀 값을 <strong>현재까지의 최대 이익(maxProfit)</strong> 으로 관리합니다.</li><li>과거 가격만 보고, 미래 가격에 팔기 위해 <strong>앞에서부터 탐색</strong>합니다.</li></ul><h2 id="코드" tabindex="-1">코드 <a class="header-anchor" href="#코드" aria-label="Permalink to &quot;코드&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> maxProfit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">prices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Number.MAX_SAFE_INTEGER</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxProfit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prices) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minPrice) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      minPrice </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> price</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      maxProfit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(maxProfit, price </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minPrice)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxProfit</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="시간-및-공간-복잡도" tabindex="-1">시간 및 공간 복잡도 <a class="header-anchor" href="#시간-및-공간-복잡도" aria-label="Permalink to &quot;시간 및 공간 복잡도&quot;">​</a></h2><table tabindex="0"><thead><tr><th>구분</th><th>복잡도</th></tr></thead><tbody><tr><td>시간 복잡도</td><td>O(n)</td></tr><tr><td>공간 복잡도</td><td>O(1)</td></tr></tbody></table><ul><li><strong>한 번의 for문</strong>으로 전체 배열을 순회 → O(n)</li><li>추가 배열이나 자료구조 없이 변수만 사용 → O(1)</li></ul><h2 id="주요-포인트" tabindex="-1">주요 포인트 <a class="header-anchor" href="#주요-포인트" aria-label="Permalink to &quot;주요 포인트&quot;">​</a></h2><ul><li><strong>앞에서부터 탐색</strong>하여 최소 가격을 찾고, 현재 가격과의 차이로 최대 이익 계산</li><li>시간 효율성과 공간 효율성이 모두 최적</li><li>인터뷰에서도 자주 출제되는 전형적인 <strong>최적화 문제</strong> 패턴</li></ul><h2 id="예시" tabindex="-1">예시 <a class="header-anchor" href="#예시" aria-label="Permalink to &quot;예시&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Input:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prices</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [7,1,5,3,6,4]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">설명:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 최소</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 가격</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (2번째 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">날</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 최대</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 이익</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (5번째 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">날에</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 팔았을</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 때</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,16)]))}const g=i(l,[["render",h]]);export{o as __pageData,g as default};
