import{_ as i,c as a,o as n,ae as t}from"./chunks/framework.Dh1jimFm.js";const o=JSON.parse('{"title":"Majority Element (LeetCode 169)","description":"","frontmatter":{},"headers":[],"relativePath":"problems/leetcode/p169.md","filePath":"problems/leetcode/p169.md"}'),h={name:"problems/leetcode/p169.md"};function l(e,s,k,p,r,d){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="majority-element-leetcode-169" tabindex="-1">Majority Element (LeetCode 169) <a class="header-anchor" href="#majority-element-leetcode-169" aria-label="Permalink to &quot;Majority Element (LeetCode 169)&quot;">​</a></h1><p><a href="https://leetcode.com/problems/majority-element/" target="_blank" rel="noreferrer">문제 링크 → LeetCode 169. Majority Element</a></p><hr><h2 id="문제-설명" tabindex="-1">문제 설명 <a class="header-anchor" href="#문제-설명" aria-label="Permalink to &quot;문제 설명&quot;">​</a></h2><p>정수 범위 <code>nums</code>가 주어지면, 배열 내에서 **과반수(&gt; n/2번 등장)**하는 요소를 찾아 반환합니다.<br><strong>문제 조건상, 과반수 요소는 범답시 존재합니다.</strong></p><hr><h2 id="입력" tabindex="-1">입력 <a class="header-anchor" href="#입력" aria-label="Permalink to &quot;입력&quot;">​</a></h2><ul><li><code>nums</code>: 정수 배열 (length ≥ 1)</li></ul><h2 id="출력" tabindex="-1">출력 <a class="header-anchor" href="#출력" aria-label="Permalink to &quot;출력&quot;">​</a></h2><ul><li>배열에서 과반수로 등장하는 정수</li></ul><hr><h2 id="접근-방법-✏️" tabindex="-1">접근 방법 ✏️ <a class="header-anchor" href="#접근-방법-✏️" aria-label="Permalink to &quot;접근 방법 ✏️&quot;">​</a></h2><h3 id="_1️⃣-map-자료구조-사용" tabindex="-1">1️⃣ <strong>Map 자료구조 사용</strong> <a class="header-anchor" href="#_1️⃣-map-자료구조-사용" aria-label="Permalink to &quot;1️⃣ **Map 자료구조 사용**&quot;">​</a></h3><ul><li>각 숫자의 등장 횟수를 <code>Map</code>에 저장합니다.</li><li>숫자 등장 횟수를 업데이트할 때마다 과반수 조건을 즉시 검증해서, 조건 충출 시 바로 반환.</li></ul><h3 id="_2️⃣-boyer-moore-voting-algorithm" tabindex="-1">2️⃣ <strong>Boyer-Moore Voting Algorithm</strong> <a class="header-anchor" href="#_2️⃣-boyer-moore-voting-algorithm" aria-label="Permalink to &quot;2️⃣ **Boyer-Moore Voting Algorithm**&quot;">​</a></h3><ul><li>공간 범추도를 **O(1)**로 줄인 방법.</li><li>하나의 호부와 카운트만 사용해서, 다른 원소와 상사(pairing)하며 과반수 원소를 찾아냈습니다.</li></ul><hr><h2 id="풀이-코드-하나나-보기-👇" tabindex="-1">풀이 코드 하나나 보기 👇 <a class="header-anchor" href="#풀이-코드-하나나-보기-👇" aria-label="Permalink to &quot;풀이 코드 하나나 보기 👇&quot;">​</a></h2><h3 id="✅-1-map-사용-방법" tabindex="-1">✅ <strong>1. Map 사용 방법</strong> <a class="header-anchor" href="#✅-1-map-사용-방법" aria-label="Permalink to &quot;✅ **1. Map 사용 방법**&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> majorityElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nums</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> halfLen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> map</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> num</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 현재 숫자의 count를 가져오고, 없으면 0으로 초기화</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cnt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(num) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(num, cnt)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 과반수 조건 충출 시 즉시 반환</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (cnt </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> halfLen) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> num</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 문제 조건상 majority element는 범답시 존재</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;No majority element found&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><strong>시간 범추도</strong>: O(n)</li><li><strong>공간 범추도</strong>: O(n)</li></ul><hr><h3 id="✅-2-boyer-moore-voting-algorithm" tabindex="-1">✅ <strong>2. Boyer-Moore Voting Algorithm</strong> <a class="header-anchor" href="#✅-2-boyer-moore-voting-algorithm" aria-label="Permalink to &quot;✅ **2. Boyer-Moore Voting Algorithm**&quot;">​</a></h3><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> majorityElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">nums</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> candidate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 초기 호부</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 호부의 카운트</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 카운트가 0이면 호부 갱체</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      candidate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nums[i]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (nums[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> candidate) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 호부와 같은 숫자 → count 증가</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 호부와 다른 숫자 → count 감소</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> candidate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><strong>시간 범추도</strong>: O(n)</li><li><strong>공간 범추도</strong>: O(1)</li></ul><hr><h2 id="시간-공간-범추도-비교-✨" tabindex="-1">시간/공간 범추도 비교 ✨ <a class="header-anchor" href="#시간-공간-범추도-비교-✨" aria-label="Permalink to &quot;시간/공간 범추도 비교 ✨&quot;">​</a></h2><table tabindex="0"><thead><tr><th>방법</th><th>시간 범추도</th><th>공간 범추도</th></tr></thead><tbody><tr><td>Map 사용</td><td>O(n)</td><td>O(n)</td></tr><tr><td>Boyer-Moore Voting Algorithm</td><td>O(n)</td><td>O(1)</td></tr></tbody></table><hr><h2 id="요약-🌟" tabindex="-1">요약 🌟 <a class="header-anchor" href="#요약-🌟" aria-label="Permalink to &quot;요약 🌟&quot;">​</a></h2><ul><li>입력 배열을 한 번만 순회하면서 효율적으로 과반수 원소를 찾을 수 있습니다.</li><li>공간 범추도 최적화를 원하면 Boyer-Moore 알고리즘이 최적의 선택입니다!</li></ul>`,31)]))}const g=i(h,[["render",l]]);export{o as __pageData,g as default};
